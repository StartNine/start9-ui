<win:DecoratableWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
        xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
        xmlns:local="clr-namespace:FrontEndTest"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:beh="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
        x:Class="FrontEndTest.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow">
    <!--BorderThickness="0,52,0,0"-->
    <!--Background="#40000000"-->
    <!--CompositionState="Glass" Background="#7FFFFFFF"-->
    <!--BorderThickness="4,75,4,4"-->
    <!--win:DecoratableWindow.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Height" Value="100"/>
            <Setter Property="Width" Value="100"/>
        </Style>
    </win:DecoratableWindow.Style-->
    <!--win:DecoratableWindow.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </win:DecoratableWindow.Resources-->
    <!--ui:NavigationView x:Name="NavigationView" Visibility="Collapsed">
        <ui:NavigationView.Style>
            <Style TargetType="{x:Type ui:NavigationView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:NavigationView}">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="MinHeight" Value="45"/>
                                    <Setter Property="Padding" Value="5,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ControlTemplate.Resources>
                                                    <QuinticEase x:Key="ScalingEase" EasingMode="EaseOut"/>
                                                </ControlTemplate.Resources>
                                                <Grid RenderTransformOrigin="0.5,0.5">
                                                    <Grid.RenderTransform>
                                                        <ScaleTransform x:Name="RootScaleTransform" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
                                                    </Grid.RenderTransform>
                                                    <Border x:Name="HoverBackground" Background="#407F7F7F" Visibility="Hidden"/>
                                                    <Border x:Name="SelectedBackground" BorderBrush="#FF0175D3" BorderThickness="3,0,0,0" Visibility="Hidden"/>
                                                    <DockPanel x:Name="ContentDockPanel" Background="#01000000">
                                                        <ContentPresenter x:Name="Icon" Width="45" Height="45" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding ui:NavigationView.Icon}" DockPanel.Dock="Left"/>
                                                        <Grid x:Name="MainContentGrid" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <ContentPresenter x:Name="PART_ContentPresenter" Visibility="Collapsed"/>
                                                            <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" Visibility="Visible"/>
                                                        </Grid>
                                                    </DockPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                        <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                                        <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="RootScaleTransform" Storyboard.TargetProperty="ScaleX" To="0.9" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="RootScaleTransform" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125" EasingFunction="{StaticResource ScalingEase}"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type ui:NavigationView}, Mode=FindAncestor}}" Value="Compact"/>
                                                            <Condition Binding="{Binding IsPaneOpen, RelativeSource={RelativeSource AncestorType={x:Type ui:NavigationView}, Mode=FindAncestor}}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="MainContentGrid" Property="Visibility" Value="Collapsed"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ControlTemplate.Resources>
                            <Grid x:Name="RootGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="PART_HamburgerToggleButton" Width="45" Height="45" IsChecked="False" IsThreeState="False" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Content="="/>
                                <Border x:Name="PART_ItemsPane" Background="LightGray" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference PART_HamburgerToggleButton}}" Width="250" Grid.Column="0" Grid.Row="2">
                                    <StackPanel x:Name="ItemsHostStackPanel" Orientation="Vertical" IsItemsHost="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="PaneDisplayMode" Value="Top">
                                    <Setter TargetName="PART_ItemsPane" Property="Grid.Row" Value="1"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="PaneDisplayMode" Value="Top"/>
                                        <Condition Property="IsBackButtonVisible" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ItemsPane" Property="Grid.Column" Value="1"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="PaneDisplayMode" Value="Top"/>
                                        <Condition Property="IsBackButtonVisible" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ItemsPane" Property="Grid.ColumnSpan" Value="2"/>
                                </MultiTrigger>
                                <Trigger Property="DisplayMode" Value="Compact">
                                    <Setter TargetName="PART_ItemsPane" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_ItemsPane" Property="Width" Value="{Binding PaneSize, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Trigger>
                                <Trigger SourceName="PART_HamburgerToggleButton" Property="IsChecked" Value="False">
                                    <Setter Property="PaneSize" Value="45"/>
                                </Trigger>
                                <Trigger Property="DisplayMode" Value="Expanded">
                                    <Setter TargetName="PART_ItemsPane" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ui:NavigationView.Style>
        <ListViewItem Content="ListViewItem A">
            <ui:NavigationView.Icon>
                <Rectangle Width="16" Height="16" Fill="Red"/>
            </ui:NavigationView.Icon>
        </ListViewItem>
        <ListViewItem Content="ListViewItem B">
            <ui:NavigationView.Icon>
                <Rectangle Width="16" Height="16" Fill="Green"/>
            </ui:NavigationView.Icon>
        </ListViewItem>
        <ListViewItem Content="ListViewItem C">
            <ui:NavigationView.Icon>
                <Rectangle Width="16" Height="16" Fill="Blue"/>
            </ui:NavigationView.Icon>
        </ListViewItem>
    </ui:NavigationView-->
    <Grid>
        <TabControl Margin="10">
            <!--Style="{DynamicResource LineTabControlStyle}"-->
            <TabItem Header="Buttons">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Enabled Controls" Grid.Column="0">
                        <StackPanel>
                            <Button Content="Normal Button">
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="AAAA"/>
                                        <MenuItem Header="BBBB" IsCheckable="True" IsChecked="True"/>
                                        <MenuItem Header="CCCC">
                                            <MenuItem Header="CAAA"/>
                                            <MenuItem Header="CBBB"/>
                                        </MenuItem>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                            <RepeatButton Content="RepeatButton"/>
                            <!--Button Style="{DynamicResource RoundButtonStyle}" Width="30" Height="30" Content="Round Button"/-->
                            <Button IsDefault="True" Content="Default Button"/>
                            <ToggleButton Content="ToggleButton"/>
                            <ToggleButton IsChecked="True" Content="Checked ToggleButton"/>
                            <Rectangle Width="1" Height="40"/>
                            <CheckBox Content="Normal CheckBox"/>
                            <CheckBox IsChecked="True" Content="Checked CheckBox"/>
                            <CheckBox IsThreeState="True" IsChecked="{x:Null}" Content="Null CheckBox"/>
                            <Rectangle Width="1" Height="40"/>
                            <RadioButton GroupName="NormalRadio" Content="Normal RadioButton"/>
                            <RadioButton GroupName="NormalRadio" IsChecked="True" Content="Checked RadioButton"/>
                            <ui:SpinBox/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Disabled Controls" Grid.Column="1" IsEnabled="False">
                        <StackPanel>
                            <Button Content="Disabled Button"/>
                            <RepeatButton Content="Disabled RepeatButton"/>
                            <!--Button Style="{DynamicResource RoundButtonStyle}" Width="30" Height="30" Content="Disabled Round Button"/-->
                            <Button Visibility="Hidden" Content="Hidden Button"/>
                            <ToggleButton Content="Disabled ToggleButton"/>
                            <ToggleButton IsChecked="True" Content="Disabled Checked ToggleButton"/>
                            <Rectangle Width="1" Height="40"/>
                            <CheckBox Content="Disabled CheckBox"/>
                            <CheckBox IsChecked="True" Content="Disabled Checked CheckBox"/>
                            <CheckBox IsThreeState="True" IsChecked="{x:Null}" Content="Disabled Null CheckBox"/>
                            <Rectangle Width="1" Height="40"/>
                            <RadioButton GroupName="DisabledRadio" Content="Disabled RadioButton"/>
                            <RadioButton GroupName="DisabledRadio" IsChecked="True" Content="Disabled Checked RadioButton"/>
                            <ui:SpinBox IsEnabled="False"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Boxes">
                <GroupBox Header="Group Box">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <ComboBox IsEditable="True" SelectedIndex="0">
                                <ComboBoxItem Content="Editable ComboBox"/>
                                <ComboBoxItem Content="Editable ComboBox"/>
                                <ComboBoxItem Content="Editable ComboBox"/>
                            </ComboBox>
                            <ComboBox IsEditable="False" SelectedIndex="0">
                                <ComboBoxItem Content="Read-Only ComboBox"/>
                                <ComboBoxItem Content="Read-Only ComboBox"/>
                                <ComboBoxItem Content="Read-Only ComboBox"/>
                            </ComboBox>
                            <TextBox Text="TextBox"/>
                            <TextBox Height="50" Text="TextBox with non-standard height"/>
                            <ListBox>
                                <ListBoxItem Content="ListBox"/>
                                <ListBoxItem Content="ListBox"/>
                                <ListBoxItem Content="ListBox"/>
                            </ListBox>
                        </StackPanel>
                        <StackPanel Grid.Column="1" IsEnabled="False">
                            <ComboBox IsEditable="True" SelectedIndex="0">
                                <ComboBoxItem Content="Disabled Editable ComboBox"/>
                                <ComboBoxItem Content="Disabled Editable ComboBox"/>
                                <ComboBoxItem Content="Disabled Editable ComboBox"/>
                            </ComboBox>
                            <ComboBox IsEditable="False" SelectedIndex="0">
                                <ComboBoxItem Content="Disabled Read-Only ComboBox"/>
                                <ComboBoxItem Content="Disabled Read-Only ComboBox"/>
                                <ComboBoxItem Content="Disabled Read-Only ComboBox"/>
                            </ComboBox>
                            <TextBox Text="Disabled TextBox"/>
                            <TextBox Height="50" Text="Disabled TextBox with non-standard height"/>
                            <ListBox>
                                <ListBoxItem Content="Disabled ListBox"/>
                                <ListBoxItem Content="Disabled ListBox"/>
                                <ListBoxItem Content="Disabled ListBox"/>
                            </ListBox>
                        </StackPanel>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="TabItem 3"/>
            <TabItem Header="TabItem 4"/>
            <TabItem Header="TabItem 5"/>
            <TabItem Header="TabItem 6"/>
        </TabControl>
        <Grid Visibility="Collapsed">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                <Button x:Name="CycleCompositionStateButton" Click="CycleCompositionStateButton_Click" Content="Cycle Composition State"/>
                <TextBlock Background="White" Foreground="Red" x:Name="CurrentCompositionStateTextBlock"><Run Text="Alpha"/></TextBlock>
            </StackPanel>
            <DockPanel>
                <StatusBar DockPanel.Dock="Bottom">
                    <StatusBarItem Content="StatusBar"/>
                </StatusBar>
                <Grid DockPanel.Dock="Bottom">
                    <Control Style="{DynamicResource ToolbarBackgroundControlStyle}"/>
                    <ToolBarTray Style="{DynamicResource TransparentToolBarTray}">
                        <ToolBar>
                            <Button Content="Button"/>
                            <ToggleButton Content="ToggleButton"/>
                            <TextBox Text="TextBox"/>
                            <TextBlock><Run Text="TextBlock"/></TextBlock>
                            <ui:ToggleSwitch Content="ToggleSwitch"/>
                            <Button Width="200" Content="Excessively wide Button"/>
                        </ToolBar>
                        <ToolBar>
                            <Button Width="200" Content="Excessively wide Button"/>
                            <Button Width="200" Content="Excessively wide Button"/>
                        </ToolBar>
                    </ToolBarTray>
                </Grid>
                <Grid DockPanel.Dock="Bottom" Background="White">
                    <ui:ToggleSwitch x:Name="ThemeToggleSwitch" TrueText="Light" FalseText="Dark" HorizontalAlignment="Left" IsThreeState="False" Checked="ThemeToggleSwitch_Checked" Unchecked="ThemeToggleSwitch_Unchecked" IsChecked="True" Visibility="Collapsed" Content="Current Theme"/>
                    <ui:ToggleSwitch TrueText="True" FalseText="False" HorizontalAlignment="Left" IsThreeState="False" Checked="ThemeToggleSwitch_Checked" Unchecked="ThemeToggleSwitch_Unchecked" IsChecked="True" Content="Title"/>
                </Grid>

            </DockPanel>
        </Grid>
    </Grid>
</win:DecoratableWindow>