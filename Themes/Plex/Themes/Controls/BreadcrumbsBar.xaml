<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/xaml/behaviors">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>
    <conv:ListViewItemIndexToBoolConverter x:Key="ListViewItemIndexToBoolConverter"/>
    
    <Style x:Key="{x:Type ui:BreadcrumbsBar}" TargetType="{x:Type ui:BreadcrumbsBar}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:BreadcrumbsBar}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/Start9.Wpf.Styles.Shale;component/Themes/Controls/Button.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                            <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="ui:AttachedProperties.CornerCurves">
                                    <Setter.Value>
                                        <ui:CornerCurves TopLeft="False" TopRight="False" BottomRight="False" BottomLeft="False"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource ListViewItemIndexToBoolConverter}" ConverterParameter="first" FallbackValue="False">
                                                <MultiBinding.Bindings>
                                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=Self}"/>
                                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}" FallbackValue="{x:Null}"/>
                                                    <Binding Mode="OneWay" Path="Children.Count" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}" FallbackValue="0" UpdateSourceTrigger="PropertyChanged"/>
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <!--Setter TargetName="IdleBackground" Property="stc" Value="2,0,0,2"/>
                                    <Setter TargetName="IdleBackground" Property="BorderThickness" Value="1"/-->
                                        <Setter Property="ui:AttachedProperties.CornerCurves">
                                            <Setter.Value>
                                                <ui:CornerCurves TopLeft="True" TopRight="False" BottomRight="False" BottomLeft="True"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                            <!--Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Foreground" Value="{DynamicResource TitlebarIdleForegroundBrush}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                                            <Border x:Name="IdleBackground" BorderBrush="{DynamicResource TitlebarBorderBrush}" BorderThickness="0,1,1,1" CornerRadius="0">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TitlebarActiveGradientStops}"/>
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="HoverBackground" BorderBrush="{DynamicResource TitlebarBorderBrush}" BorderThickness="{Binding BorderThickness, ElementName=IdleBackground}" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Opacity="0">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TitlebarInactiveGradientStops}"/>
                                                </Border.Background>
                                            </Border>
                                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsPressed" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource ListViewItemIndexToBoolConverter}" ConverterParameter="first" FallbackValue="False">
                                                        <MultiBinding.Bindings>
                                                            <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=Self}"/>
                                                            <Binding Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type StackPanel}}" FallbackValue="{x:Null}"/>
                                                            <Binding Mode="OneWay" Path="Children.Count" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}" FallbackValue="0" UpdateSourceTrigger="PropertyChanged"/>
                                                        </MultiBinding.Bindings>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter TargetName="IdleBackground" Property="CornerRadius" Value="2,0,0,2"/>
                                                <Setter TargetName="IdleBackground" Property="BorderThickness" Value="1"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style-->
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Grid>
                        <TextBox x:Name="PART_TextBox" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <StackPanel x:Name="PART_BreadcrumbsStackPanel" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                        <!--Height="{Binding ActualHeight, ElementName=PART_TextBox}"-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>