<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/xaml/behaviors">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>
    <conv:ThicknessInvertFilterConverter x:Key="ThicknessInvertFilterConverter"/>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{DynamicResource TextBoxPrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxPrimaryBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}" />
                                        <!--ControlTemplate.Triggers>
                                            
                                        </ControlTemplate.Triggers-->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                                    <Setter Property="Background" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid>
                                            <Border Name="OuterBorder" CornerRadius="11" BorderThickness="1" Padding="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                                            <Border CornerRadius="10" BorderThickness="1" Padding="0" BorderBrush="Transparent" ClipToBounds="True">
                                                <Border x:Name="ClipBorder" CornerRadius="9" BorderThickness="0" Padding="0" Background="Transparent" BorderBrush="Transparent" ClipToBounds="True">
                                                    <Grid>
                                                        <Grid x:Name="ClipGrid" Margin="0" ClipToBounds="True">
                                                            <Grid.OpacityMask>
                                                                <VisualBrush>
                                                                    <VisualBrush.Visual>
                                                                        <Border Background="White" SnapsToDevicePixels="True" CornerRadius="9" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"/>
                                                                    </VisualBrush.Visual>
                                                                </VisualBrush>
                                                            </Grid.OpacityMask>
                                                            <Grid x:Name="IdleEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0.25">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="11"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="11"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                                    <Canvas.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxGlowLinearGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                            </Grid>
                                                            <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0" ClipToBounds="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="11"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="11"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                                    <Canvas.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowLinearGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                            </Grid>
                                                        </Grid>
                                                        <Grid Margin="{TemplateBinding Padding}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="20" />
                                                            </Grid.ColumnDefinitions>
                                                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" IsTabStop="False" Grid.Column="0"/>
                                                            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 3.5 7 L 0 3 L 0 2 L 7 2 L 7 3 Z" Fill="{DynamicResource IconPathFillBrush}" Stroke="{DynamicResource IconPathStrokeBrush}" StrokeThickness="1"/>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                            <Border CornerRadius="11" BorderThickness="1" Margin="1" Background="Transparent" BorderBrush="{DynamicResource TextBoxSecondaryBorderBrush}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsChecked" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                                                <Setter TargetName="ClipGrid" Property="Opacity" Value="0.5"/>
                                                <Setter TargetName="OuterBorder" Property="Opacity" Value="0.5"/>
                                                <Setter TargetName="Arrow" Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}"/>
                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="{TemplateBinding Foreground}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsEnabled="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" VerticalOffset="-6">
                            <Grid ClipToBounds="True" Background="#01000000">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Opacity="0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="PopupTranslateTransform" X="0" Y="-50"/>
                                    </Grid.RenderTransform>
                                    <DockPanel Margin="0,-6,0,0">
                                        <Grid x:Name="DropDownTopEdgeBorder" Height="9" ClipToBounds="True" DockPanel.Dock="Top" Panel.ZIndex="8" Margin="0,2,0,-2">
                                            <Border BorderThickness="8,0,8,8" BorderBrush="{DynamicResource DefaultWindowBodyBrush}" CornerRadius="0,0,8,8" Margin="-8,0,-8,-8"/>
                                            <Border BorderThickness="1,0,1,1" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}" CornerRadius="0,0,8,8"/>
                                            <Border BorderThickness="1,0" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}"/>
                                        </Grid>
                                        <Grid>
                                            <Border x:Name="DropDownBorder" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}" Background="{DynamicResource DefaultWindowBodyBrush}"/>
                                            <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0,0,8,8" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.0">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                        <DoubleAnimation Storyboard.TargetName="PopupTranslateTransform" Storyboard.TargetProperty="Y" To="0" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.125">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.125" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PopupTranslateTransform" Storyboard.TargetProperty="Y" To="-50" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="SelectedBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <!--VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFC5CBF9" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFDDDDDD" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups-->

                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>