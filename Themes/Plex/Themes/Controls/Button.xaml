<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/xaml/behaviors">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>
    <conv:RevealBrushViewboxConverter x:Key="RevealBrushViewboxConverter"/>
    <conv:DoublesLimitToBoolConverter x:Key="DoublesLimitToBoolConverter"/>

    <Style x:Key="{x:Type ButtonBase}" TargetType="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <!--Setter Property="Margin" Value="6,6,10,10" /-->
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
                        <!--Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect-->
                        <Border x:Name="IdleBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="{DynamicResource StandardButtonIdleBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonIdleBorderBrush}"/>
                        <Border x:Name="PressedBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonPressedBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonPressedBorderBrush}" />
                        <Border x:Name="SecondaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonTertiaryBackgroundBrush}" BorderBrush="Transparent"/>
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="3,2,3,3" Padding="0" Opacity="0" BorderBrush="{DynamicResource StandardButtonHoverBorderBrush}" Background="Transparent">
                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource StandardButtonHoverGlowBrush}"/>
                        </Border>
                        <Border x:Name="TertiaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonSenaryBackgroundBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0"
                                Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonDisabledPrimaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledPrimaryBorderBrush}">
                        </Border>
                        <Border x:Name="DisabledSecondaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0"
                                Padding="0" Visibility="Visible" Opacity="0" Background="Transparent"
                                BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonDisabledSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0"
                                        Background="Transparent" BorderBrush="{DynamicResource StandardButtonDisabledTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0"
                                                Background="{DynamicResource StandardButtonDisabledTertiaryBackgroundBrush}" BorderBrush="Transparent" />
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonDisabledQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="Button" BasedOn="{StaticResource {x:Type ButtonBase}}"/>
    <Style x:Key="{x:Type RepeatButton}" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Type ButtonBase}}"/>

    <Style x:Key="RoundButtonBaseStyle" TargetType="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <!--Setter Property="Margin" Value="6,6,11,10" /-->
        <!--Setter Property="Padding" Value="0" /-->
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexRoundFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdlePrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledTertiaryFillBrush}"/>
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundButtonBaseStyle}"/>
    <Style x:Key="RoundRepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource RoundButtonBaseStyle}"/>

    <Style x:Key="ToolbarButtonBaseStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <!--Setter Property="fwpf:PointerTracker.Enabled" Value="True"/-->
        <Setter Property="ui:RevealInfo.RevealEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border x:Name="IdleBackground" Opacity="1" Margin="2,1,2,2" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}">
                            <Border.BorderBrush>
                                <VisualBrush ViewboxUnits="Absolute">
                                    <VisualBrush.Visual>
                                        <Ellipse x:Name="IdleRevealGlowEllipse" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualWidth}" RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <ScaleTransform ScaleX="3" ScaleY="3"/>
                                            </Ellipse.RenderTransform>
                                            <Ellipse.Fill>
                                                <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" GradientStops="{DynamicResource ToolbarButtonIdleRevealGradientStops}"/>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </VisualBrush.Visual>
                                    <VisualBrush.Viewbox>
                                        <MultiBinding Converter="{StaticResource RevealBrushViewboxConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorX)"/>
                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorY)"/>
                                            <Binding Source="{x:Reference Name=IdleRevealGlowEllipse}" Path="Width"/>
                                            <Binding Source="{x:Reference Name=IdleRevealGlowEllipse}" Path="Height"/>
                                        </MultiBinding>
                                    </VisualBrush.Viewbox>
                                </VisualBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="HoverBackground" Opacity="0" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource ToolbarButtonPrimaryBorderBrush}" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}">
                            <Border BorderThickness="1" BorderBrush="{DynamicResource ToolbarButtonSecondaryBorderBrush}" Background="{DynamicResource ToolbarButtonSecondaryBackgroundBrush}" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}">
                                <Border Margin="1" BorderBrush="{DynamicResource ToolbarButtonTertiaryBackgroundBrush}" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}">
                                    <Border.Background>
                                        <VisualBrush ViewboxUnits="Absolute">
                                            <VisualBrush.Visual>
                                                <Ellipse x:Name="HoverRevealGlowEllipse" RenderTransformOrigin="0.5,0.5">
                                                    <beh:Interaction.Behaviors>
                                                        <uib:RevealSizeSynchronizerBehavior/>
                                                    </beh:Interaction.Behaviors>
                                                    <Ellipse.RenderTransform>
                                                        <ScaleTransform ScaleX="2" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
                                                    </Ellipse.RenderTransform>
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" GradientStops="{DynamicResource ToolbarButtonHoverRevealGradientStops}"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                            </VisualBrush.Visual>
                                            <VisualBrush.Viewbox>
                                                <MultiBinding Converter="{StaticResource RevealBrushViewboxConverter}">
                                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorX)"/>
                                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorY)"/>
                                                    <Binding Source="{x:Reference Name=HoverRevealGlowEllipse}" Path="Width"/>
                                                    <Binding Source="{x:Reference Name=HoverRevealGlowEllipse}" Path="Height"/>
                                                </MultiBinding>
                                            </VisualBrush.Viewbox>
                                        </VisualBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX" To="3" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX" To="2" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Yeet2" TargetType="ButtonBase">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='4,4,4,4;0,0,0,0'}" Opacity="0">
                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                    <Border BorderThickness="0,1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}">
                        <Border.Background>
                            <VisualBrush ViewboxUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Ellipse x:Name="HoverRevealGlowEllipse" RenderTransformOrigin="0.5,0.5">
                                        <beh:Interaction.Behaviors>
                                            <uib:RevealSizeSynchronizerBehavior/>
                                        </beh:Interaction.Behaviors>
                                        <!--Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"-->
                                        <!--Ellipse.Width>
                                                        <MultiBinding Converter="{StaticResource DoublesLimitToBoolConverter}" ConverterParameter="max">
                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Width"/>
                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Height"/>
                                                        </MultiBinding>
                                                    </Ellipse.Width-->
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Fill>
                                            <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                                <!--GradientStop Offset="0" Color="#FFEEFEFE"/>
                                                            <GradientStop Offset="0.5" Color="#B076BDEF"/>
                                                            <GradientStop Offset="0.75" Color="#5076BEEF"/>
                                                            <GradientStop Offset="1" Color="#0076BEEF"/-->
                                                <GradientStop Offset="0" Color="#FFB8F2FB"/>
                                                <GradientStop Offset="1" Color="#00B8F2FB"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </VisualBrush.Visual>
                                <VisualBrush.Viewbox>
                                    <MultiBinding Converter="{StaticResource RevealBrushViewboxConverter}">
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorX)"/>
                                        <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorY)"/>
                                        <Binding Source="{x:Reference Name=HoverRevealGlowEllipse}" Path="Width"/>
                                        <Binding Source="{x:Reference Name=HoverRevealGlowEllipse}" Path="Height"/>
                                    </MultiBinding>
                                </VisualBrush.Viewbox>
                            </VisualBrush>
                        </Border.Background>
                        <!--Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Visibility="Collapsed">
                                        <Border.Background>
                                            <!-fwpf:RevealBrush Color="{DynamicResource ToolbarButtonRevealColor}" Size="100" Opacity="0.75" /->
                                            <RadialGradientBrush MappingMode="Absolute" RadiusY="100" RadiusX="100" GradientStops="{DynamicResource ToolbarButtonRevealGradientStops}" Opacity="0.75">
                                                <RadialGradientBrush.Center>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.Center>
                                                <RadialGradientBrush.GradientOrigin>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.GradientOrigin>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <!-fwpf:RevealBrush Color="{DynamicResource ToolbarButtonRevealColor}" Size="200" Opacity="1" /->
                                            <RadialGradientBrush MappingMode="Absolute" RadiusY="200" RadiusX="200" GradientStops="{DynamicResource ToolbarButtonRevealGradientStops}">
                                                <RadialGradientBrush.Center>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.Center>
                                                <RadialGradientBrush.GradientOrigin>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.GradientOrigin>
                                            </RadialGradientBrush>
                                        </Border.BorderBrush>
                                    </Border-->
                    </Border>
                </Border>
            </Border>
            <Border Margin="1" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}">
                <Border.BorderBrush>
                    <!--ui:RevealBrush>
                                    <ui:RevealBrush.RevealEffectVisual>
                                        <Ellipse Width="100" Height="100">
                                            <!-Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"->
                                            <Ellipse.Fill>
                                                <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FFEEFEFE"/>
                                                        <GradientStop Offset="0.5" Color="#B076BDEF"/>
                                                        <GradientStop Offset="0.75" Color="#5076BEEF"/>
                                                        <GradientStop Offset="1" Color="#0076BEEF"/>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </ui:RevealBrush.RevealEffectVisual>
                                </ui:RevealBrush-->
                    <VisualBrush ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Ellipse x:Name="IdleRevealGlowEllipse" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualWidth}" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="3" ScaleY="3"/>
                                </Ellipse.RenderTransform>
                                <!--Width="100" Height="100"-->
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                        <GradientStop Offset="0" Color="#FFEEFEFE"/>
                                        <GradientStop Offset="0.5" Color="#B076BDEF"/>
                                        <GradientStop Offset="0.75" Color="#5076BEEF"/>
                                        <GradientStop Offset="1" Color="#0076BEEF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </VisualBrush.Visual>
                        <VisualBrush.Viewbox>
                            <MultiBinding Converter="{StaticResource RevealBrushViewboxConverter}">
                                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorX)"/>
                                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="(ui:RevealInfo.CursorY)"/>
                                <Binding Source="{x:Reference Name=IdleRevealGlowEllipse}" Path="Width"/>
                                <Binding Source="{x:Reference Name=IdleRevealGlowEllipse}" Path="Height"/>
                            </MultiBinding>
                        </VisualBrush.Viewbox>
                    </VisualBrush>
                    <!--RadialGradientBrush MappingMode="Absolute" RadiusY="100" RadiusX="100" GradientStops="{DynamicResource ToolbarButtonRevealGradientStops}" Opacity="0.75">
                                    <RadialGradientBrush.Center>
                                        <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                        </MultiBinding>
                                    </RadialGradientBrush.Center>
                                    <RadialGradientBrush.GradientOrigin>
                                        <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.RootObject)"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="(fwpf:PointerTracker.Position)" />
                                        </MultiBinding>
                                    </RadialGradientBrush.GradientOrigin>
                                </RadialGradientBrush-->
                    <!--fwpf:RevealBrush Color="#FFB8F2FB" Size="200" Opacity="1" /-->
                </Border.BorderBrush>
            </Border>
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX" To="3" Duration="0:0:0.125" />
                            <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="RenderTransform.ScaleX" To="2" Duration="0:0:0.25" />
                            <DoubleAnimation Storyboard.TargetName="HoverRevealGlowEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Yeet" TargetType="ButtonBase">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='4,4,4,4;0,0,0,0'}" Opacity="0">
                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF68A2CC">
                    <!--BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}"-->
                    <Grid>
                        <!--Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Background="#FF68A2CC"/-->
                        <Border x:Name="RevealRectangle" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" BorderThickness="1"/>
                        <!--Border.BorderBrush>
                                <fwpf:RevealBrush Color="#FFB8F2FB" Size="200" Opacity="1" />
                            </>
                        </Border-->
                        <!--Rectangle>
                                        <Rectangle.Fill>
                                            <RadialGradientBrush MappingMode="Absolute" RadiusY="200" RadiusX="200">
                                                <RadialGradientBrush.Center>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding Source="{x:Reference Name=RevealRectangle}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding Source="{x:Reference Name=RevealRectangle}"/>
                                                        <Binding Source="{x:Reference Name=RevealRectangle}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.Center>
                                                <RadialGradientBrush.GradientOrigin>
                                                    <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                        <Binding Source="{x:Reference Name=RevealRectangle}" Path="(fwpf:PointerTracker.RootObject)"/>
                                                        <Binding Source="{x:Reference Name=RevealRectangle}"/>
                                                        <Binding Source="{x:Reference Name=RevealRectangle}" Path="(fwpf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.GradientOrigin>
                                                <GradientStop Color="#FFB8F2FB" Offset="0"/>
                                                <GradientStop Color="#00B8F2FB" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle-->
                    </Grid>
                </Border>
                <!--Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border-->
            </Border>
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToolbarButtonStyle" TargetType="Button" BasedOn="{StaticResource ToolbarButtonBaseStyle}"/>
    <Style x:Key="ToolbarRepeatButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource ToolbarButtonBaseStyle}"/>

    <Style x:Key="HeaderStripButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="15,0"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Direction="225" ShadowDepth="3" BlurRadius="25" Opacity="0.25"/>
                        </Grid.Effect>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DropShadow" Storyboard.TargetProperty="Opacity" To="0.625" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DropShadow" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Button Styles-->


    <!--#region ToggleButton Styles-->

    <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <!--Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect-->
                        <Border x:Name="IdleBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="{DynamicResource StandardButtonIdleBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonIdleBorderBrush}"/>
                        <Border x:Name="PressedBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonPressedBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonPressedBorderBrush}" />
                        <Border x:Name="SecondaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonTertiaryBackgroundBrush}" BorderBrush="Transparent"/>
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="3,2,3,3" Padding="0" Opacity="0" BorderBrush="{DynamicResource StandardButtonHoverBorderBrush}" Background="Transparent">
                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource StandardButtonHoverGlowBrush}"/>
                        </Border>
                        <Border x:Name="TertiaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonSenaryBackgroundBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0"
                                Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonDisabledPrimaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledPrimaryBorderBrush}">
                        </Border>
                        <Border x:Name="DisabledSecondaryBackground" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0"
                                Padding="0" Visibility="Visible" Opacity="0" Background="Transparent"
                                BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonDisabledSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0"
                                        Background="Transparent" BorderBrush="{DynamicResource StandardButtonDisabledTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0"
                                                Background="{DynamicResource StandardButtonDisabledTertiaryBackgroundBrush}" BorderBrush="Transparent" />
                                        <Border BorderThickness="0" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='1,1,1,1;0,0,0,0'}" Margin="0" Padding="0" Background="{DynamicResource StandardButtonDisabledQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <!--DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" /-->
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource RoundButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdlePrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledTertiaryFillBrush}"/>
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolbarToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ToolbarButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="SelectedBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='4,4,4,4;0,0,0,0'}" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='4,4,4,4;0,0,0,0'}" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" UseLayoutRounding="True">
                            <ContentPresenter.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowInverseToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" UseLayoutRounding="True">
                            <ContentPresenter.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>