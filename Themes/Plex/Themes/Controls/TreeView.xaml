<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/expression/2010/interactivity">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <!--Setter Property="ItemTemplate" Value="{DynamicResource NavigationPaneDataTemplate}"/-->
        <!--Setter Property="ItemContainerStyle" Value="{DynamicResource NavigationPaneTreeViewItemStyle}"/-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Margin" Value="0"/>
        <!--Setter Property="Width" Value="190"/-->
        <Setter Property="Padding">
            <Setter.Value>
                <Binding ConverterParameter="15" Path="Padding" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}">
                    <Binding.FallbackValue>
                        <Thickness>0</Thickness>
                    </Binding.FallbackValue>
                    <Binding.Converter>
                        <conv:TreeViewItemPaddingConverter/>
                    </Binding.Converter>
                    <!--Binding>
                        <Binding.FallbackValue>
                            <Thickness>0</Thickness>
                        </Binding.FallbackValue>
                    </Binding>
                    <Binding Path="Margin" RelativeSource="{RelativeSource Mode=Self}"/-->
                </Binding>
            </Setter.Value>
        </Setter>
        <!-- Value="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeViewItem}, FallbackValue=0}"/-->
        <!--Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ThicknessLeftToSubtractDoubleConverter}">
                    <Binding Path="Width" RelativeSource="{RelativeSource Mode=Self}"/>
                    <Binding Path="Padding" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter-->
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Tag" Value="{x:Static Visibility.Visible}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="RowZeroGrid" Background="#01000000" HorizontalAlignment="Stretch" Height="Auto" Grid.Row="0">
                            <Border x:Name="HoverBackground" BorderThickness="1" Padding="0" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.5" MinWidth="0" IsHitTestVisible="False">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="HoverScaleTransform" ScaleX="0" ScaleY="1"/>
                                    <!--TranslateTransform x:Name="HoverTranslateTransform" X="-100"/-->
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF599EE2"/>
                                            <GradientStop Offset="1" Color="#FF61B4FF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF80C3FF"/>
                                            <GradientStop Offset="0.45" Color="#FF70B2FF"/>
                                            <GradientStop Offset="0.9" Color="#FF8CCEFF"/>
                                            <GradientStop Offset="1" Color="#FF83C4FF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop x:Name="LightColorTop" Offset="0" Color="#FF80C3FF"/>
                                                <GradientStop x:Name="LightColorMiddle" Offset="0.45" Color="#FF70B2FF"/>
                                                <GradientStop x:Name="LightColorBottom" Offset="0.9" Color="#FF8CCEFF"/>
                                                <GradientStop x:Name="LightColorBottomBelow" Offset="1" Color="#FF83C4FF"/>
                                                <!--GradientStop x:Name="LightColorTop" Offset="0" Color="#FF1C5F9B"/>
                                                <GradientStop x:Name="LightColorMiddle" Offset="0.45" Color="#FF0C4E9B"/>
                                                <GradientStop x:Name="LightColorBottom" Offset="0.9" Color="#FF286A9B"/>
                                                <GradientStop x:Name="LightColorBottomBelow" Offset="1" Color="#FF83C4FF"/-->
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="SelectedBackground" BorderThickness="1" Padding="0" Margin="0" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" MinWidth="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF599EE2"/>
                                            <GradientStop Offset="1" Color="#FF61B4FF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF80C3FF"/>
                                            <GradientStop Offset="0.45" Color="#FF70B2FF"/>
                                            <GradientStop Offset="0.9" Color="#FF8CCEFF"/>
                                            <GradientStop Offset="1" Color="#FF83C4FF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#401C5F9B"/>
                                                <GradientStop Offset="0.45" Color="#400C4E9B"/>
                                                <GradientStop Offset="0.9" Color="#40286A9B"/>
                                                <GradientStop Offset="1" Color="#4083C4FF"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <DockPanel Grid.Row="0" Margin="{TemplateBinding Padding}">
                                <ToggleButton x:Name="Expander" Margin="8,0" ClickMode="Release" IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" VerticalContentAlignment="center" HorizontalContentAlignment="Left" SnapsToDevicePixels="True" UseLayoutRounding="True" Visibility="Visible" HorizontalAlignment="Center" VerticalAlignment="Center" FocusVisualStyle="{x:Null}" DockPanel.Dock="Left">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Width" Value="8"/>
                                            <Setter Property="Height" Value="16"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="UseLayoutRounding" Value="True" />
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="1.5"
                                              BlurRadius="5" Opacity="0.5" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                                                            <Grid.RenderTransform>
                                                                <RotateTransform x:Name="Rotator" Angle="0"/>
                                                            </Grid.RenderTransform>
                                                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                <Path x:Name="Arrow" Data="M 0 0 L 8 8 L 0 16 Z" Stroke="#FFA0D2FF" StrokeThickness="1">
                                                                    <Path.Fill>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Offset="0" Color="#FF66B7CC"/>
                                                                                <GradientStop Offset="1" Color="#FF66B7CC"/>
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Path.Fill>
                                                                </Path>
                                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}"/>
                                                            </StackPanel>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="45" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <!--Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, PreviousData={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}}"-->
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,0,0" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </DockPanel>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" HorizontalAlignment="Stretch" Height="Auto" Visibility="Collapsed" Width="{TemplateBinding Width}" Grid.Row="1" Margin="0">
                            <ItemsPresenter.LayoutTransform>
                                <ScaleTransform x:Name="ItemsHostTransform" ScaleY="0"/>
                            </ItemsPresenter.LayoutTransform>
                        </ItemsPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Static Visibility.Hidden}">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Expander" Property="Margin" Value="9,0,0,0"/>
                            <!--Setter TargetName="Expander" Property="Margin" Value="0"/-->
                        </Trigger>
                        <Trigger SourceName="Expander" Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHostTransform" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0:0:0.0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsHostTransform" Storyboard.TargetProperty="ScaleY" To="0" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0:0:0.125">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.125" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="IsExpanded" Value="True"/>
                            <!--Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/-->
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger SourceName="RowZeroGrid" Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                        <!--ColorAnimation Storyboard.TargetName="LightColorTop" Storyboard.TargetProperty="Color" To="#FF80C3FF" Duration="0:0:0.125"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorMiddle" Storyboard.TargetProperty="Color" To="#FF70B2FF" Duration="0:0:0.125"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorBottom" Storyboard.TargetProperty="Color" To="#FF8CCEFF" Duration="0:0:0.125"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorBottomBelow" Storyboard.TargetProperty="Color" To="#FF83C4FF" Duration="0:0:0.125"/-->
                                        <DoubleAnimation Storyboard.TargetName="HoverScaleTransform" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.5"/>
                                        <!--ColorAnimation Storyboard.TargetName="LightColorTop" Storyboard.TargetProperty="Color" To="#FF1C5F9B" Duration="0:0:0.375"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorMiddle" Storyboard.TargetProperty="Color" To="#FF0C4E9B" Duration="0:0:0.375"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorBottom" Storyboard.TargetProperty="Color" To="#FF286A9B" Duration="0:0:0.375"/>
                                        <ColorAnimation Storyboard.TargetName="LightColorBottomBelow" Storyboard.TargetProperty="Color" To="#FF1F609B" Duration="0:0:0.375"/-->
                                        <DoubleAnimation Storyboard.TargetName="HoverScaleTransform" Storyboard.TargetProperty="ScaleX" To="0" Duration="0:0:0.375">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MountedTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource MountedListViewBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border Name="Border" CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="0" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                            </Border.Effect>
                        </Border>
                        <ScrollViewer Focusable="False" CanContentScroll="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>