<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/xaml/behaviors">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="CheckBoxFrame" Width="13" DockPanel.Dock="Left">
                            <Border x:Name="IdleBackground" CornerRadius="2" Background="Transparent" BorderThickness="1"
                                BorderBrush="{DynamicResource CheckBoxBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Visibility="Visible">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="1" BorderThickness="1" BorderBrush="{DynamicResource CheckBoxSecondaryBorderBrush}" Background="{DynamicResource CheckBoxSecondaryBackgroundBrush}"/>
                            </Border>
                            <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1"
                              Opacity="0">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Width="3" Height="3"
                                                Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="3"
                                                Margin="2,0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Top" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="3"
                                                Margin="2,0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                            </Grid>
                            <Path x:Name="CheckMark" Data="M 0 4.391 L 2.821 8.206 L 8.613 0 L 7.840 0 L 2.821 5.248 L 0.655 4.391 Z" HorizontalAlignment="Center"
                              VerticalAlignment="Center" Fill="{DynamicResource CheckBoxCheckMarkBrush}" Stroke="{DynamicResource CheckBoxCheckMarkBrush}" StrokeThickness="1.125"
                              Opacity="0" />
                            <!--Data="M 1 4 L 3 6 L 5 3 L 3 7 Z"-->
                            <Path x:Name="IndeterminateBox" Data="M 0.5 0.5 L 0.5 6 L 6 6 L 6 0.5 Z"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource CheckBoxCheckMarkBrush}" Stroke="{DynamicResource CheckBoxCheckMarkBrush}" StrokeThickness="1.25" Opacity="0" />
                        </Grid>
                        <ContentPresenter Margin="5,0,0,0" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                            <Setter TargetName="CheckBoxFrame" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion CheckBox Styles-->


    <!--#region RadioButton Styles-->

    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid x:Name="CheckBoxFrame" Width="13" Height="13">
                                <Ellipse StrokeThickness="1" Stroke="{DynamicResource CheckBoxBorderBrush}"/>
                                <Ellipse Margin="1" Stroke="{DynamicResource CheckBoxSecondaryBorderBrush}" Fill="{DynamicResource CheckBoxSecondaryBackgroundBrush}"/>
                                <Ellipse x:Name="HoverEdge" Margin="1" Opacity="0">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="CheckMark" Margin="4" Fill="{DynamicResource CheckBoxCheckMarkBrush}" Opacity="0"/>
                                <!--Visibility="{TemplateBinding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                            <Setter TargetName="CheckBoxFrame" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>