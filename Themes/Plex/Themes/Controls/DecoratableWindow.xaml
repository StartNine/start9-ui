<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/xaml/behaviors">
    <!--#region Converters-->

    <conv:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <conv:WidthAndHeightToRectConverter x:Key="WidthAndHeightToRectConverter"/>
    <conv:DoubleComparisonConverter x:Key="DoubleComparisonConverter"/>
    <conv:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>

    <!--#endregion Converters-->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style x:Key="BorderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#01000000" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid>

                        <Ellipse HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" />
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="0,-1,0,1" />
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-3,-2,3,2" />
                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-2,1,2,-1" />
                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-1,0.5,1,-0.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,1,0,-1" />
        <Setter Property="Foreground" Value="{DynamicResource CaptionButtonActiveIdleBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="19"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3"
                                              BlurRadius="10" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000" Margin="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="0" ScaleY="0"/>
                            </Grid.RenderTransform>
                            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding ActualWidth, ElementName=Content}" Height="{Binding ActualHeight, ElementName=Content}" ClipToBounds="True">
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding Content, ElementName=Content}"/>
                            </Grid.OpacityMask>
                            <Rectangle x:Name="Glyph" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="InactiveGlyph" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource CaptionButtonInactiveIdleBrush}" Opacity="0"/>
                            <Rectangle x:Name="HoverGlyph" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource CaptionButtonActiveHoverBrush}" Opacity="0"/>
                            <Rectangle x:Name="PressedGlyph" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource CaptionButtonActivePressedBrush}" Opacity="0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                            <!--Setter TargetName="Glyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="InactiveGlyph" Property="Content" Value="{Binding ElementName=ContentPresenter, Mode=OneWay}"/>
                            <Setter TargetName="HoverGlyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="PressedGlyph" Property="Content" Value="{x:Null}"/-->
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="Glyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="InactiveGlyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="HoverGlyph" Property="Content" Value="{Binding ElementName=ContentPresenter, Mode=OneWay}"/>
                            <Setter TargetName="PressedGlyph" Property="Content" Value="{x:Null}"/-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="Glyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="InactiveGlyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="HoverGlyph" Property="Content" Value="{x:Null}"/>
                            <Setter TargetName="PressedGlyph" Property="Content" Value="{Binding ElementName=ContentPresenter, Mode=OneWay}"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type win:DecoratableWindow}"  TargetType="{x:Type win:DecoratableWindow}">
        <Style.Resources>
            <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
            <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
            <CircleEase x:Key="WindowRotateEase" EasingMode="EaseOut"/>
        </Style.Resources>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="RootScaleTransform" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="CompositionState" Value="Alpha"/>
        <Setter Property="HideTransitionDuration" Value="50"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource DefaultWindowBodyBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="FontFamily" Value="Selawik"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShadowOffsetThickness" Value="24,24,32,48"/>
        <Setter Property="TitlebarHeight" Value="24"/>
        <Setter Property="Padding" Value="0,24,0,0"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="Window">
                    <Style.Resources>
                        <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
                        <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
                        <CircleEase x:Key="WindowRotateEase" EasingMode="EaseOut"/>
                    </Style.Resources>
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <ui:Planerator x:Name="ShadowPlanerator" RotationY="-22.5" Margin="-35,-46,0,0" RenderOptions.EdgeMode="Aliased">
                                    <ui:Planerator.RenderTransform>
                                        <TranslateTransform x:Name="AnimateTranslateTransform" Y="0"/>
                                    </ui:Planerator.RenderTransform>
                                    <Border Background="#01000000" Padding="5">
                                        <Grid x:Name="ShadowGrid" Margin="35,46,0,0" ClipToBounds="True">
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                            <!--Grid.OpacityMask>
                                                                <SolidColorBrush x:Name="ShadowRootOpacityMaskBrush" Color="Black" Opacity="1"/>
                                                            </Grid.OpacityMask-->
                                                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="12" BorderBrush="Black" Background="Transparent"/>
                                                            <Border Margin="4,4,39,50" BorderThickness="10" CornerRadius="17" BorderBrush="Black" Background="Transparent"/>
                                                            <!--Border BorderThickness="49,60" CornerRadius="12" BorderBrush="Black" Background="Transparent"/>
                                                        <Border Margin="39,50,39,50" BorderThickness="10" CornerRadius="17" BorderBrush="Black" Background="Transparent"/-->
                                                        </Grid>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                            <Grid.Background>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                            <Grid.Resources>
                                                                <GradientStopCollection x:Key="ShadowGradientStops">
                                                                    <GradientStop Offset="0" Color="#7F000000" />
                                                                    <GradientStop Offset="0.75" Color="#0C000000" />
                                                                    <GradientStop Offset="1" Color="#00000000" />
                                                                </GradientStopCollection>
                                                            </Grid.Resources>
                                                            <!--Diagonal size is 67.19-->
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="48"/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="48"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="48"/>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="48"/>
                                                            </Grid.RowDefinitions>
                                                            <Rectangle Grid.Column="0" Grid.Row="0">
                                                                <Rectangle.Fill>
                                                                    <RadialGradientBrush GradientOrigin="1,1" Center="1,1" RadiusX="1" RadiusY="1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Canvas Grid.Column="1" Grid.Row="0">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="2" Grid.Row="0">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="0,1" Center="0,1" RadiusX="1" RadiusY="1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="2" Grid.Row="1">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="2" Grid.Row="2">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="0,0" Center="0,0" RadiusX="1" RadiusY="1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="1" Grid.Row="2">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="0" Grid.Row="2">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="1,0" Center="1,0" RadiusX="1" RadiusY="1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="0" Grid.Row="1">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas Grid.Column="1" Grid.Row="1" Background="#7F000000" />
                                                        </Grid>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.Background>
                                        </Grid>
                                    </Border>
                                </ui:Planerator>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsManipulationEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsHitTestVisible" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--DoubleAnimation Storyboard.TargetName="ShadowRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/-->
                                                    <DoubleAnimation Storyboard.TargetName="ShadowPlanerator" Storyboard.TargetProperty="RotationY" From="-22.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetName="AnimateTranslateTransform" Storyboard.TargetProperty="Y" From="-7.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--DoubleAnimation Storyboard.TargetName="ShadowRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/-->
                                                    <DoubleAnimation Storyboard.TargetName="ShadowPlanerator" Storyboard.TargetProperty="RotationY" From="0" To="22.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetName="AnimateTranslateTransform" Storyboard.TargetProperty="Y" From="0" To="-7.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:DecoratableWindow}">
                    <ControlTemplate.Resources>
                        <Style x:Key="BorderThumbStyle" TargetType="Thumb">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="#01000000" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="AnimationRoot">
                        <ui:Planerator x:Name="ContentPlanerator" RotationY="-22.5" RenderOptions.EdgeMode="Aliased">
                            <!--ContentPresenter x:Name="PlaneratorContentPresenter"/-->
                            <Rectangle x:Name="ContentRectangle" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" RenderOptions.EdgeMode="Aliased" RadiusX="12" RadiusY="12">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=WindowRoot}" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="LowQuality"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </ui:Planerator>
                        <ContentPresenter x:Name="RootContentPresenter" Opacity="0" RenderOptions.EdgeMode="Aliased">
                            <!--Visibility="Collapsed"-->
                            <ContentPresenter.Content>
                                <Grid x:Name="WindowRoot" Margin="{TemplateBinding Margin}">
                                    <Grid>
                                        <DockPanel>
                                            <Rectangle x:Name="TitlebarSpacerRectangle" Height="{TemplateBinding TitlebarHeight}" Fill="#01000000" DockPanel.Dock="Top"/>
                                            <Border x:Name="Body" Background="{TemplateBinding Background}" CornerRadius="8,8,12,12"/>
                                        </DockPanel>
                                        <Grid x:Name="TitlebarGrid" Height="{TemplateBinding TitlebarHeight}" VerticalAlignment="Top">
                                            <Grid.RenderTransform>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            </Grid.RenderTransform>
                                            <Border x:Name="TitlebarBorder" BorderThickness="0,1,0,0" Background="{DynamicResource ActiveTitlebarBackgroundBrush}" BorderBrush="{DynamicResource ActiveTitlebarBorderBrush}" Margin="0,0,0,-8" Padding="0" CornerRadius="12,12,0,0">
                                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="12,1,12,0" Fill="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Border}}"/>
                                            </Border>
                                            <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16" Margin="3" Fill="{TemplateBinding Icon, Converter={StaticResource IconToImageBrushConverter}}">
                                            </Rectangle>
                                            <Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="{TemplateBinding ShowTitlebarText, Converter={StaticResource BooleanToVisibilityConverter}}" Height="26" Margin="0,-2" FontSize="12" Foreground="{DynamicResource ActiveTitleBarForegroundBrush}">
                                                <Label.Effect>
                                                    <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                                                </Label.Effect>
                                            </Label>
                                            <Thumb x:Name="PART_Titlebar" Style="{DynamicResource BorderThumbStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Thumb.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem x:Name="PART_SystemMenuRestore" Header="Restore"/>
                                                        <MenuItem x:Name="PART_SystemMenuMove" Header="Move"/>
                                                        <MenuItem x:Name="PART_SystemMenuSize" Header="Size"/>
                                                        <MenuItem x:Name="PART_SystemMenuMinimize" Header="Minimize"/>
                                                        <MenuItem x:Name="PART_SystemMenuMaximize" Header="Maximize"/>
                                                        <MenuItem x:Name="PART_SystemMenuClose" Header="Close"/>
                                                    </ContextMenu>
                                                </Thumb.ContextMenu>
                                            </Thumb>
                                            <StackPanel x:Name="CaptionButtons" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Height="20" Margin="0,0,3,0">
                                                <Button x:Name="PART_FullscreenButton" Style="{DynamicResource CaptionButtonStyle}" ToolTip="Full Screen" Visibility="Collapsed">
                                                    <Grid Width="9" Height="9">
                                                        <Border Background="Transparent" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="2,0,0,2" Width="4" Height="4" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                                        <Border Background="Transparent" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="0,2,2,0" Width="4" Height="4" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                                    </Grid>
                                                </Button>
                                                <Button x:Name="PART_MinimizeButton" Style="{DynamicResource CaptionButtonStyle}" ToolTip="Minimize">
                                                    <Border Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                                </Button>
                                                <Grid x:Name="MaxRestButtonGrid" Width="Auto">
                                                    <Button x:Name="PART_MaximizeButton" Style="{DynamicResource CaptionButtonStyle}" ToolTip="Maximize">
                                                        <Border Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Button>
                                                    <Button x:Name="PART_RestoreButton" Style="{DynamicResource CaptionButtonStyle}" ToolTip="Restore Down" Visibility="Hidden">
                                                        <Grid>
                                                            <Grid x:Name="RestoreIcon" Width="9" Height="9">
                                                                <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                                                <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                                            </Grid>
                                                            <Grid x:Name="UnFullscreenIcon" Width="9" Height="9" Visibility="Collapsed">
                                                                <Border Background="Transparent" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="2,0,0,2" Width="4" Height="4" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                                                <Border Background="Transparent" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="0,2,2,0" Width="4" Height="4" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                                            </Grid>
                                                        </Grid>
                                                    </Button>
                                                </Grid>
                                                <Button x:Name="PART_CloseButton" Style="{DynamicResource CaptionButtonStyle}" ToolTip="Close">
                                                    <Path Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Data="M 0 0 L 1.5 0 L 4.5 3 L 7.5 0 L 9 0 L 9 1.5 L 6 4.5 L 9 7.5 L 9 9 L 7.5 9 L 4.5 6 L 1.5 9 L 0 9 L 0 7.5 L 3 4.5 L 0 1.5 Z"/>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                    <ContentPresenter x:Name="ContentPr" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>
                                    <Grid x:Name="ResizeGrid">
                                        <Grid.Resources>
                                            <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}" BasedOn="{StaticResource BorderThumbStyle}"/>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="4" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="4" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="4" />
                                            <RowDefinition />
                                            <RowDefinition Height="4" />
                                        </Grid.RowDefinitions>
                                        <Thumb x:Name="PART_ThumbBottom" Cursor="SizeNS" Grid.Column="1" Grid.Row="2"/>
                                        <Thumb x:Name="PART_ThumbTop" Cursor="SizeNS" Grid.Column="1" Grid.Row="0"/>
                                        <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.Row="1"/>
                                        <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.Row="1"/>
                                        <Thumb x:Name="PART_ThumbBottomRightCorner" Cursor="SizeNWSE" Grid.Column="2" Grid.Row="2"/>
                                        <Thumb x:Name="PART_ThumbTopRightCorner" Cursor="SizeNESW" Grid.Column="2" Grid.Row="0"/>
                                        <Thumb x:Name="PART_ThumbTopLeftCorner" Cursor="SizeNWSE" Grid.Column="0" Grid.Row="0"/>
                                        <Thumb x:Name="PART_ThumbBottomLeftCorner" Cursor="SizeNESW" Grid.Column="0" Grid.Row="2"/>
                                        <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumbStyle}" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="2"/>
                                    </Grid>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsWindowVisible" Value="True"/>
                                <Condition Property="Opacity" Value="1"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPlanerator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RootContentPresenter" Property="Opacity" Value="1"/>
                            <Setter TargetName="RootContentPresenter" Property="RenderOptions.EdgeMode" Value="Unspecified"/>
                        </MultiTrigger>
                        <Trigger Property="IsWindowVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.75" To="1" Duration="0:0:0.75" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPlanerator" Storyboard.TargetProperty="RotationY" From="-22.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="AnimationRoot" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="0.75" Duration="0:0:0.75" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPlanerator" Storyboard.TargetProperty="RotationY" From="0" To="22.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="AnimationRoot" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ShowFullscreenButton" Value="True">
                            <Setter TargetName="PART_FullscreenButton" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="TitlebarBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Body" Property="CornerRadius" Value="8,8,0,0"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsFullscreen" Value="True">
                            <Setter TargetName="PART_FullscreenButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RestoreIcon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="UnFullscreenIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFullscreen" Value="True"/>
                                <Condition Property="AutohideTitlebarWhenFullscreen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TitlebarGrid" Property="Panel.ZIndex" Value="1"/>
                            <!--Setter TargetName="Body" Property="Margin" Value="0,-1,0,0"/-->
                            <Setter TargetName="TitlebarSpacerRectangle" Property="Panel.ZIndex" Value="2"/>
                            <!--Setter TargetName="ContentPr" Property="Panel.ZIndex" Value="-1"/-->
                            <Setter TargetName="TitlebarSpacerRectangle" Property="Height" Value="1"/>
                            <Setter Property="Padding" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFullscreen" Value="True"/>
                                <Condition SourceName="TitlebarSpacerRectangle" Property="IsMouseOver" Value="False"/>
                                <Condition SourceName="TitlebarGrid" Property="IsMouseOver" Value="False"/>
                                <Condition Property="AutohideTitlebarWhenFullscreen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TitlebarGrid" Storyboard.TargetProperty="RenderTransform.ScaleY" To="0" Duration="0:0:0.25" EasingFunction="{StaticResource WindowHiddenEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TitlebarGrid" Storyboard.TargetProperty="RenderTransform.ScaleY" To="1" Duration="0:0:0.25" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="IsFullscreenTitlebarHidden" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="TitlebarBorder" Property="Background" Value="{DynamicResource InactiveTitlebarBackgroundBrush}"/>
                            <Setter TargetName="TitlebarBorder" Property="BorderBrush" Value="{DynamicResource InactiveTitlebarBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="zDecoratableWindow"  TargetType="{x:Type win:DecoratableWindow}">
        <Style.Resources>
            <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
            <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
            <CircleEase x:Key="WindowRotateEase" EasingMode="EaseOut"/>
        </Style.Resources>
        <!--Setter Property="OverridesDefaultStyle" Value="True"/-->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="RootScaleTransform" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="CompositionState" Value="Alpha"/>
        <Setter Property="HideTransitionDuration" Value="50"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,24,0,0" />
        <Setter Property="Background" Value="{DynamicResource DefaultWindowBodyBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="FontFamily" Value="Selawik"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShadowOffsetThickness" Value="49,14,14,60"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="Window">
                    <Style.Resources>
                        <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
                        <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
                        <CircleEase x:Key="WindowRotateEase" EasingMode="EaseOut"/>
                    </Style.Resources>
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <ui:Planerator x:Name="ShadowPlanerator" RotationY="-22.5" Margin="0,-46,-35,0" RenderOptions.EdgeMode="Aliased">
                                    <ui:Planerator.RenderTransform>
                                        <TranslateTransform x:Name="AnimateTranslateTransform" Y="0"/>
                                    </ui:Planerator.RenderTransform>
                                    <Border Background="#01000000">
                                        <Grid x:Name="ShadowGrid" Margin="0,46,35,0" ClipToBounds="True">
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                            <!--Grid.OpacityMask>
                                                                <SolidColorBrush x:Name="ShadowRootOpacityMaskBrush" Color="Black" Opacity="1"/>
                                                            </Grid.OpacityMask-->
                                                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="12" BorderBrush="Black" Background="Transparent"/>
                                                            <Border Margin="39,4,4,50" BorderThickness="10" CornerRadius="17" BorderBrush="Black" Background="Transparent"/>
                                                            <!--Border BorderThickness="49,60" CornerRadius="12" BorderBrush="Black" Background="Transparent"/>
                                                        <Border Margin="39,50,39,50" BorderThickness="10" CornerRadius="17" BorderBrush="Black" Background="Transparent"/-->
                                                        </Grid>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                            <Grid.Background>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                            <!--Diagonal size is 67.19-->
                                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Width="58" Height="58">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="1,1" Center="1,1" RadiusX="1" RadiusY="1">
                                                                        <RadialGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#7F000000" />
                                                                            <GradientStop Offset="1" Color="#00000000" />
                                                                        </RadialGradientBrush.GradientStops>
                                                                    </RadialGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="58,0" Height="58">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#00000000" />
                                                                            <GradientStop Offset="1" Color="#7F000000" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Right" VerticalAlignment="Top" Width="58" Height="58">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="0,1" Center="0,1" RadiusX="1" RadiusY="1">
                                                                        <RadialGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#7F000000" />
                                                                            <GradientStop Offset="1" Color="#00000000" />
                                                                        </RadialGradientBrush.GradientStops>
                                                                    </RadialGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,58" Width="58">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#00000000" />
                                                                            <GradientStop Offset="1" Color="#7F000000" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="58" Height="58">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="0,0" Center="0,0" RadiusX="1" RadiusY="1">
                                                                        <RadialGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#7F000000" />
                                                                            <GradientStop Offset="1" Color="#00000000" />
                                                                        </RadialGradientBrush.GradientStops>
                                                                    </RadialGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="58,0" Height="58">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#00000000" />
                                                                            <GradientStop Offset="1" Color="#7F000000" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="58" Height="58">
                                                                <Canvas.Background>
                                                                    <RadialGradientBrush GradientOrigin="1,0" Center="1,0" RadiusX="1" RadiusY="1">
                                                                        <RadialGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#7F000000" />
                                                                            <GradientStop Offset="1" Color="#00000000" />
                                                                        </RadialGradientBrush.GradientStops>
                                                                    </RadialGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,58" Width="58">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#00000000" />
                                                                            <GradientStop Offset="1" Color="#7F000000" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="58,58" Background="#7F000000" />
                                                        </Grid>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.Background>
                                        </Grid>
                                    </Border>
                                </ui:Planerator>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsManipulationEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsHitTestVisible" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--DoubleAnimation Storyboard.TargetName="ShadowRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/-->
                                                    <DoubleAnimation Storyboard.TargetName="ShadowPlanerator" Storyboard.TargetProperty="RotationY" From="-22.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetName="AnimateTranslateTransform" Storyboard.TargetProperty="Y" From="-7.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--DoubleAnimation Storyboard.TargetName="ShadowRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/-->
                                                    <DoubleAnimation Storyboard.TargetName="ShadowPlanerator" Storyboard.TargetProperty="RotationY" From="0" To="22.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                    <DoubleAnimation Storyboard.TargetName="AnimateTranslateTransform" Storyboard.TargetProperty="Y" From="0" To="-7.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:DecoratableWindow}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style x:Key="BorderThumb" TargetType="Thumb">
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="#01000000" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid Background="#01000000" IsHitTestVisible="True">
                                                <Border x:Name="Glyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="InactiveGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="HoverGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="PressedGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid Background="#01000000" IsHitTestVisible="True" Margin="0.25,1,-0.25,-1">
                                                <Border x:Name="Glyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="InactiveGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="HoverGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border x:Name="PressedGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                                <!--Setter Property="Content">
                                <Setter.Value>
                                    <Grid Width="9" Height="9">
                                        <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                        <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                    </Grid>
                                </Setter.Value>
                            </Setter-->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid Background="#01000000" IsHitTestVisible="True" Margin="0.25,1,-0.25,-1">
                                                <Grid x:Name="Glyph" Width="9" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{TemplateBinding Foreground}"/>
                                                    <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{TemplateBinding Foreground}"/>
                                                </Grid>
                                                <Grid x:Name="InactiveGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                                                    <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                                                </Grid>
                                                <Grid x:Name="HoverGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                    <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                </Grid>
                                                <Grid x:Name="PressedGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}"/>
                                                    <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}"/>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ControlTemplate.Resources>
                                                <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1 0 L 4 3 L 7 0 L 8 0 L 8 1 L 5 4 L 8 7 L 8 8 L 7 8 L 4 5 L 1 8 L 0 8 L 0 7 L 3 4 L 0 1 Z"/-->
                                                <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 2 0 L 4 2 L 6 0 L 8 0 L 8 2 L 6 4 L 8 6 L 8 8 L 6 8 L 4 6 L 2 8 L 0 8 L 0 6 L 2 4 L 0 2 Z"/-->
                                                <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1.5 0 L 4 2.5 L 6.5 0 L 8 0 L 8 1.5 L 5.5 4 L 8 6.5 L 8 8 L 6.5 8 L 4 5.5 L 1.5 8 L 0 8 L 0 6.5 L 2.5 4 L 0 1.5 Z"/-->
                                                <PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1.5 0 L 4.5 3 L 7.5 0 L 9 0 L 9 1.5 L 6 4.5 L 9 7.5 L 9 9 L 7.5 9 L 4.5 6 L 1.5 9 L 0 9 L 0 7.5 L 3 4.5 L 0 1.5 Z"/>
                                            </ControlTemplate.Resources>
                                            <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="{TemplateBinding Padding}">
                                                <Grid Background="#01000000" IsHitTestVisible="True" Margin="0,0.5,0,-0.5">
                                                    <Path x:Name="Glyph" Fill="{TemplateBinding Foreground}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    <Path x:Name="InactiveGlyph" Fill="{DynamicResource CaptionButtonInactiveIdleBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                    <Path x:Name="HoverGlyph" Fill="{DynamicResource CaptionButtonActiveHoverBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                    <Path x:Name="PressedGlyph" Fill="{DynamicResource CaptionButtonActivePressedBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="ResizeGripThumbStyle" TargetType="Thumb" BasedOn="{StaticResource BorderThumb}">
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Width" Value="18" />
                                <Setter Property="Height" Value="18" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="VerticalAlignment" Value="Bottom" />
                                <Setter Property="Cursor" Value="SizeNWSE"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <ResizeGrip x:Name="PART_ResizeGrip" Style="{DynamicResource {x:Type ResizeGrip}}" Visibility="Visible"/>
                                                <Rectangle StrokeThickness="0">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="#01000000" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.OpacityMask>
                            <SolidColorBrush x:Name="TrueRootOpacityMaskBrush" Color="Black" Opacity="1"/>
                        </Grid.OpacityMask>
                        <ui:Planerator x:Name="ContentPlanerator" RotationY="-22.5" RenderOptions.EdgeMode="Aliased">
                            <!--ContentPresenter x:Name="PlaneratorContentPresenter"/-->
                            <Rectangle x:Name="ContentRectangle" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" RenderOptions.EdgeMode="Aliased" RadiusX="12" RadiusY="12">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{Binding ElementName=WindowRoot}" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="LowQuality"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </ui:Planerator>
                        <ContentPresenter x:Name="RootContentPresenter" Opacity="0" RenderOptions.EdgeMode="Aliased">
                            <!--Visibility="Collapsed"-->
                            <ContentPresenter.Content>
                                <!--Border x:Name="RootBorder" ClipToBounds="True"-->
                                <Border ClipToBounds="True">
                                    <!--Border.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual-->
                                    <!--Border Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" Background="Black" CornerRadius="12"/-->
                                    <!--Rectangle Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" Fill="Black" RadiusX="12" RadiusY="12"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.OpacityMask-->
                                    <Grid x:Name="WindowRoot" ClipToBounds="True">
                                        <DockPanel LastChildFill="True" Background="Transparent">
                                            <Grid x:Name="PART_Titlebar" HorizontalAlignment="Stretch" Margin="0" Height="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter=t}" Visibility="Visible" Opacity="1" DockPanel.Dock="Top">
                                                <Grid.ContextMenu>
                                                    <ContextMenu>
                                                        <!--local:TouchableContextMenu-->
                                                        <!--ContextMenu.Resources>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Height" Value="25" />
                                                <Setter Property="MinWidth" Value="175"/>
                                                <Setter Property="Background" Value="#01000000" />
                                                <Setter Property="Foreground" Value="White" />
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="FontStyle" Value="Normal" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="BorderBrush" Value="#01000000" />
                                                <Setter Property="Padding" Value="10,0" />
                                                <Setter Property="Margin" Value="0,0,0,3" />
                                                <Style.Triggers>
                                                    <Trigger Property="Role" Value="TopLevelHeader">
                                                        <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                                                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="TopLevelItem">
                                                        <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="SubmenuHeader">
                                                        <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="Role" Value="SubmenuItem">
                                                        <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="beh:TouchableContextMenuBehavior.OpenedWithTouch" Value="True">
                                                        <Setter Property="Height" Value="46.590925" />
                                                    </Trigger>
                                                    <!-DataTrigger Binding="{Binding Path=TouchableBehaviour.OpenedWithTouch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Value="True">
                                                        <Setter Property="Height" Value="46.590925" />
                                                    </DataTrigger->
                                                </Style.Triggers>
                                            </Style>
                                        </ContextMenu.Resources-->
                                                        <MenuItem x:Name="PART_SystemMenuRestore" Header="Restore"/>
                                                        <MenuItem x:Name="PART_SystemMenuMove" Header="Move"/>
                                                        <MenuItem x:Name="PART_SystemMenuSize" Header="Size"/>
                                                        <MenuItem x:Name="PART_SystemMenuMinimize" Header="Minimize"/>
                                                        <MenuItem x:Name="PART_SystemMenuMaximize" Header="Maximize"/>
                                                        <MenuItem x:Name="PART_SystemMenuClose" Header="Close"/>
                                                    </ContextMenu>
                                                </Grid.ContextMenu>
                                                <!--Grid x:Name="TitlebarBackground" Visibility="Visible"/-->
                                                <Border x:Name="ActiveTitlebarBorder" BorderThickness="0,1,0,0" Background="{DynamicResource ActiveTitlebarBackgroundBrush}" BorderBrush="{DynamicResource ActiveTitlebarBorderBrush}" Margin="0,0,0,-12" Padding="0" CornerRadius="12,12,0,0">
                                                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="12,1,12,0" Fill="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Border}}"/>
                                                </Border>
                                                <!--CornerRadius="12,12,0,0"-->
                                                <!--Grid x:Name="InactiveTitlebarBackground" Visibility="Hidden">
                                                    <Border x:Name="InactiveTitlebarBorder" BorderThickness="0,1,0,0" Background="{DynamicResource InactiveTitlebarBackgroundBrush}" BorderBrush="{DynamicResource InactiveTitlebarBorderBrush}" Margin="0,0,0,-12" Padding="0" />
                                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="12,2,12,0" Background="{DynamicResource InactiveTitlebarBorderBrush}" />
                                                </Grid-->
                                                <!--CornerRadius="12,12,0,0"-->
                                                <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16" Margin="3" Fill="{TemplateBinding Icon, Converter={StaticResource IconToImageBrushConverter}}">
                                                    <!--Canvas.Background>
                                                        <ImageBrush ImageSource="{TemplateBinding Icon}" />
                                                    </Canvas.Background-->
                                                </Rectangle>
                                                <Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="{TemplateBinding ShowTitlebarText, Converter={StaticResource BooleanToVisibilityConverter}}" Height="26" Margin="0,-2" FontSize="12" Foreground="{DynamicResource ActiveTitleBarForegroundBrush}">
                                                    <Label.Effect>
                                                        <!--DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320"
                                                          ShadowDepth="3" BlurRadius="10" Opacity="0.5" /-->
                                                        <!--DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/-->
                                                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                                                    </Label.Effect>
                                                </Label>
                                                <!--ContentPresenter Content="{TemplateBinding TitleBarContent}" /-->
                                                <StackPanel x:Name="CaptionButtons" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Height="22">
                                                    <!--RenderTransformOrigin="1,0">
                                        <StackPanel.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </StackPanel.RenderTransform-->
                                                    <!--Width="18" VerticalAlignment="Stretch" -->
                                                    <Button x:Name="PART_MinimizeButton" Margin="-0.5,0,0.5,0" Style="{DynamicResource MinimizeButtonStyle}"/>
                                                    <!--Border Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"/-->
                                                    <!--0-->
                                                    <Grid x:Name="MaxRestButtonGrid" Margin="-1,0,1,0">
                                                        <!--Margin="-1,0,1,0"-->
                                                        <Button x:Name="PART_MaximizeButton" Style="{DynamicResource MaximizeButtonStyle}"/>
                                                        <!--Border Width="10" Height="9" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/-->
                                                        <!--1-->
                                                        <Button x:Name="PART_RestoreButton" Visibility="Collapsed" Style="{DynamicResource RestoreButtonStyle}"/>
                                                    </Grid>
                                                    <Button x:Name="PART_CloseButton" Padding="-3.25,0.625,3.25,-0.625" Style="{DynamicResource CloseButtonStyle}"/>
                                                </StackPanel>
                                                <Border x:Name="DialogFilm" IsHitTestVisible="False" Background="#C0000000" Visibility="Collapsed" Margin="0,0,0,-12"/>
                                                <!--CornerRadius="12,12,0,0" -->
                                            </Grid>
                                            <Grid x:Name="BodyGrid" HorizontalAlignment="Stretch" Margin="0" Background="{TemplateBinding Background}" ClipToBounds="True">
                                                <Grid.OpacityMask>
                                                    <VisualBrush>
                                                        <VisualBrush.Visual>
                                                            <Rectangle Width="{Binding ActualWidth, Source={x:Reference BodyContentPresenter}}" Height="{Binding ActualHeight, Source={x:Reference BodyContentPresenter}}" Fill="Black" RadiusX="12" RadiusY="12"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Grid.OpacityMask>
                                                <!--Border BorderBrush="{Binding}"-->
                                                <!--Border.Clip>
                                    <RectangleGeometry RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}">
                                        <RectangleGeometry.Rect>
                                            <MultiBinding Converter="{StaticResource WidthAndHeightToRectConverter}" >
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType={x:Type Border}}"/>
                                            </MultiBinding>
                                        </RectangleGeometry.Rect>
                                    </RectangleGeometry>
                                </Border.Clip-->
                                                <!--Rectangle x:Name="BodySizingAid"/-->
                                                <ContentPresenter x:Name="BodyContentPresenter" Content="{TemplateBinding Content}"/>
                                                <!--ContentPresenter.OpacityMask>
                                                            <VisualBrush>
                                                                <VisualBrush.Visual>
                                                                    <Border Width="{Binding ActualWidth, Source={x:Reference BodySizingAid}}" Height="{Binding ActualHeight, Source={x:Reference BodySizingAid}}" Background="Black" BorderBrush="Transparent" BorderThickness="0" CornerRadius="12"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </ContentPresenter.OpacityMask-->
                                            </Grid>
                                        </DockPanel>
                                        <!--Grid x:Name="FullWindowContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}" ClipToBounds="True"-->
                                        <!--Grid.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" Background="Black" BorderBrush="Transparent" BorderThickness="0" CornerRadius="12"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.OpacityMask-->
                                        <!--Grid.Clip>
                                <RectangleGeometry RadiusX="12" RadiusY="12">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource WidthAndHeightToRectConverter}" >
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Grid.Clip-->
                                        <!--ContentPresenter Content="{TemplateBinding FullWindowContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}"/-->
                                        <!--/Grid-->
                                        <Grid x:Name="ResizeGrid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Background="{x:Null}" Margin="0,3" Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                            <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumb}" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="3" Grid.Row="3"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsWindowVisible, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True"/-->
                        <!--Condition Binding="{Binding Path=Opacity, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource DoubleComparisonConverter}, ConverterParameter=1l}" Value="True"/-->
                        <!--/MultiDataTrigger.Conditions>
                            <Setter TargetName="ContentPlanerator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RootContentPresenter" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsWindowVisible" Value="True"/>
                                <Condition Property="Opacity" Value="1"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPlanerator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RootContentPresenter" Property="Opacity" Value="1"/>
                            <Setter TargetName="RootContentPresenter" Property="RenderOptions.EdgeMode" Value="Unspecified"/>
                        </MultiTrigger>
                        <Trigger Property="IsWindowVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.75" To="1" Duration="0:0:0.75" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                        <!--DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/-->
                                        <DoubleAnimation Storyboard.TargetName="TrueRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPlanerator" Storyboard.TargetProperty="RotationY" From="-22.5" To="0" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="0.75" Duration="0:0:0.75" EasingFunction="{StaticResource WindowVisibleEase}"/>
                                        <!--DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/-->
                                        <DoubleAnimation Storyboard.TargetName="TrueRootOpacityMaskBrush" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentPlanerator" Storyboard.TargetProperty="RotationY" From="0" To="22.5" Duration="0:0:0.75" EasingFunction="{StaticResource WindowRotateEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="7"/>
                            <Setter Property="MaxWidth" Value="{x:Static SystemParameters.PrimaryScreenWidth}"/>
                            <Setter Property="MaxHeight" Value="{x:Static SystemParameters.PrimaryScreenHeight}"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="WindowRoot" Property="Margin" Value="9,9,-9,-9"/>
                            <!--Setter TargetName="WindowRoot" Property="OpacityMask" Value="Black"/-->
                            <!--Setter TargetName="WindowRoot" Property="OpacityMask" Value="{x:Null}"/-->
                            <Setter TargetName="BodyGrid" Property="OpacityMask" Value="{x:Null}"/>
                            <Setter TargetName="ContentRectangle" Property="RadiusX" Value="0"/>
                            <Setter TargetName="ContentRectangle" Property="RadiusY" Value="0"/>
                            <Setter TargetName="ActiveTitlebarBorder" Property="CornerRadius" Value="0"/>
                            <!--12,12,0,0"/-->
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <!--Setter TargetName="TitleText" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/-->
                            <!--Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Hidden"/-->
                            <!--Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible"/-->
                            <!--Setter TargetName="PART_MinimizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_RestoreButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_CloseButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/-->
                            <Setter TargetName="ActiveTitlebarBorder" Property="Background" Value="{DynamicResource InactiveTitlebarBackgroundBrush}"/>
                            <Setter TargetName="ActiveTitlebarBorder" Property="BorderBrush" Value="{DynamicResource InactiveTitlebarBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Trigger Property="IsWindowVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard-->
            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.0">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames-->
            <!--DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.75" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard-->
            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.5">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames-->
            <!--DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="0.75" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger-->
        </Style.Triggers>
    </Style>
</ResourceDictionary>