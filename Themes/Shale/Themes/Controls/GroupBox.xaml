<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/expression/2010/interactivity">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid Margin="10">
                        <!--Grid.Effect>
                            <DropShadowEffect Color="Black" Direction="270" ShadowDepth="10" BlurRadius="20" Opacity="0.5"/>
                        </Grid.Effect-->
                        <Border Background="Black" BorderBrush="Transparent" BorderThickness="1" Effect="{DynamicResource TertiaryDropShadow}"/>
                        <Border Grid.Row="1" BorderBrush="Transparent" BorderThickness="0" CornerRadius="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" Height="Auto" MinHeight="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="HeaderPresenter" Grid.Row="0" ContentSource="Header" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="14" Opacity="0.5" VerticalAlignment="Center"/>
                                <ContentPresenter x:Name="BodyPresenter" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--DataTrigger Binding="{Binding Path=ContentSource, Source={x:Reference HeaderPresenter}, Converter={StaticResource IsNullOrWhiteSpaceConverter}}" Value="True"-->
                        <Trigger Property="Header" Value="{x:Null}">
                            <!--Setter TargetName="BodyPresenter" Property="Margin" Value="0,-10,0,0"/-->
                            <Setter TargetName="HeaderPresenter" Property="Margin" Value="0"/>
                            <Setter TargetName="TopRow" Property="Height" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid Margin="9">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="Auto"/>
                                <!--Height="{Binding DesiredSize.Height, ElementName=Content}"-->
                            </Grid.RowDefinitions>
							<Border CornerRadius="3" UseLayoutRounding="True" Margin="-5" Effect="{DynamicResource TertiaryDropShadow}" Grid.RowSpan="2">
								<Border.Background>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,0.75" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
								</Border.Background>
							</Border>
                            <DockPanel Grid.Row="0">
                                <ToggleButton OverridesDefaultStyle="True" IsChecked="{Binding IsExpanded, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Left">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="Width" Value="30"/>
                                            <Setter Property="Height" Value="30"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Background="#01000000" Effect="{DynamicResource DropShadow}" UseLayoutRounding="True">
                                                        <!--RenderOptions.EdgeMode="Aliased"-->
                                                            <!--ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="8,0"-->
                                                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 0 12" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" RenderTransformOrigin="0.5,0.5">
                                                                <!--Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ToggleButton}}}"-->
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="0"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,1,0" RenderTransformOrigin="0.5,0.5"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource TitlebarHoverForegroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource TitlebarPressedForegroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="90" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="0" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontSize="14" Opacity="0.5" VerticalAlignment="Center"/>
                            </DockPanel>
                            <Border x:Name="Content" Grid.Row="1">
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="1"/>
                                </Border.LayoutTransform>
                                <ContentPresenter Margin="0,5,0,0"/>
                            </Border>
                        </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="0" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" /-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>