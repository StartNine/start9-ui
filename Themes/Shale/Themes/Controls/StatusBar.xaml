<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:ui="clr-namespace:Start9.UI.Wpf;assembly=Start9.UI.Wpf"
            xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
            xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
            xmlns:uib="clr-namespace:Start9.UI.Wpf.Behaviors;assembly=Start9.UI.Wpf"
            xmlns:beh="http://schemas.microsoft.com/expression/2010/interactivity">
    <conv:CornerCurvesToCornerRadiusConverter x:Key="CornerCurvesToCornerRadiusConverter"/>

    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="ui:AttachedProperties.CornerCurves">
            <Setter.Value>
                <ui:CornerCurves TopLeft="False" TopRight="False" BottomRight="True" BottomLeft="True"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border x:Name="Border" Style="{DynamicResource HorizontalBarBorderStyle}" ui:AttachedProperties.CornerCurves="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <ItemsPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DockPanel.Dock" Value="Left">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,1,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Top">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Right">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,0,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Bottom">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShadowedStatusBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource {x:Type StatusBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Grid>
                        <Rectangle VerticalAlignment="Top" Height="9" IsHitTestVisible="False" Margin="0,-9">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity="0.625" StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border x:Name="Border" Style="{DynamicResource HorizontalBarBorderStyle}" ui:AttachedProperties.CornerCurves="{Binding Path=(ui:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ItemsPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DockPanel.Dock" Value="Left">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,1,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Top">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Right">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,0,0"/>
                        </Trigger>
                        <Trigger Property="DockPanel.Dock" Value="Bottom">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Fill="{TemplateBinding Foreground}" Width="1" Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource StatusBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>