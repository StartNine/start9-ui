<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Start9.UI.Wpf"
    xmlns:win="clr-namespace:Start9.UI.Wpf.Windows"
    xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <conv:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <conv:WidthAndHeightToRectConverter x:Key="WidthAndHeightToRectConverter"/>
    <conv:DoubleToFractionOfDoubleConverter x:Key="DoubleToFractionOfDoubleConverter"/>
    <conv:DoubleComparisonConverter x:Key="DoubleComparisonConverter"/>
    <conv:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>
    
    <!--#region Window Styles-->

    <Style TargetType="win:DecoratableWindow">
        <Style.Resources>
            <ResourceDictionary>
                <QuarticEase x:Key="WindowVisibleEase" EasingMode="EaseOut"/>
                <QuinticEase x:Key="WindowHiddenEase" EasingMode="EaseIn"/>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="RootScaleTransform" ScaleX="1" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Mode=Self}}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HideTransitionDuration" Value="50"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="BorderBrush" Value="#C0000000" />
        <Setter Property="BorderThickness" Value="0,30,0,0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Selawik"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShadowOffsetThickness" Value="14,13,14,19"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="AllowsTransparency" Value="True"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <Grid x:Name="ShadowGrid" ClipToBounds="True">
                                    <Grid.Resources>
                                        <GradientStopCollection x:Key="ShadowGradientStops">
                                            <GradientStop Offset="0" Color="#7F000000"/>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                        </GradientStopCollection>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>
                                    <Grid.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black">
                                                    <Border.OpacityMask>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#C0000000"/>
                                                                <GradientStop Offset="1" Color="Black"/>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.OpacityMask>
                                                </Border>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.OpacityMask>
                                    <Rectangle Grid.Column="0" Grid.Row="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="0" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="1,1" Center="1,1" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="0,1" Center="0,1" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="2" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="0,0" Center="0,0" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="0" Grid.Row="2">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush GradientOrigin="1,0" Center="1,0" GradientStops="{DynamicResource ShadowGradientStops}" RadiusX="1" RadiusY="1"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsHitTestVisible" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:DecoratableWindow}">
                    <ControlTemplate.Resources>
                        <Style x:Key="BorderThumb" TargetType="Thumb">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="#01000000" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ResizeGripThumbStyle" TargetType="Thumb" BasedOn="{StaticResource BorderThumb}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Width" Value="18" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="Margin" Value="0,0,5,5" />
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                            <Setter Property="Cursor" Value="SizeNWSE"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <ControlTemplate.Resources>
                                            <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Foreground" Value="Blue" />
                                                <Setter Property="Background" Value="#01000000" />
                                                <Setter Property="IsHitTestVisible" Value="True" />
                                                <Setter Property="Width" Value="18" />
                                                <Setter Property="Height" Value="18" />
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                <Setter Property="VerticalAlignment" Value="Bottom" />
                                                <Setter Property="Cursor" Value="SizeNWSE"/>
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ResizeGrip}">
                                                            <Grid>
                                                                <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                                                    <TextBlock Foreground="{x:Static SystemColors.GrayTextBrush}">o</TextBlock>
                                                                    <TextBlock Foreground="{x:Static SystemColors.HighlightTextBrush}">p</TextBlock>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ControlTemplate.Resources>
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Rectangle StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="#01000000" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <ResizeGrip x:Name="PART_ResizeGrip"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="Width" Value="44"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Background" Value="#36040409"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Background="#01000000">
                                            <Grid x:Name="BackgroundGrid">
                                                <Rectangle x:Name="BackgroundRectangle" Fill="{TemplateBinding Background}" Opacity="0"/>
                                            </Grid>
                                            <Grid Margin="{TemplateBinding Padding}">
                                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False"/>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Name" Value="PART_CloseButton"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <!--Condition Property="Background" Value="#FFE81123"/-->
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="White" Duration="0:0:0.125"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="Black" Duration="0:0:0.125"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="BackgroundGrid" Property="Opacity" Value="0.75"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}}" Value="False"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self},FallbackValue=False}" Value="False"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self},FallbackValue=False}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="WindowRoot" Background="#01000000">
                        <Border x:Name="EdgeColorBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
                        <Border x:Name="BaseBorder" Background="{TemplateBinding Background}" Margin="{Binding BorderThickness, ElementName=EdgeColorBorder}">
                            <Grid>
                                <Grid x:Name="PART_Titlebar" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="{Binding BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:DecoratableWindow}}, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter=t, FallbackValue=130}" Visibility="Visible" Opacity="1" Background="#01000000">
                                    <Grid.ContextMenu>
                                        <local:TouchableContextMenu>
                                            <MenuItem x:Name="PART_SystemMenuRestore" Header="Restore"/>
                                            <MenuItem x:Name="PART_SystemMenuMove" Header="Move"/>
                                            <MenuItem x:Name="PART_SystemMenuSize" Header="Size"/>
                                            <MenuItem x:Name="PART_SystemMenuMinimize" Header="Minimize"/>
                                            <MenuItem x:Name="PART_SystemMenuMaximize" Header="Maximize"/>
                                            <MenuItem x:Name="PART_SystemMenuClose" Header="Close"/>
                                        </local:TouchableContextMenu>
                                    </Grid.ContextMenu>
                                    <!--Border x:Name="ActiveTitlebarBackground" Visibility="Visible" IsHitTestVisible="False">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="{x:Static SystemColors.ActiveCaptionColor}"/>
                                            <GradientStop Offset="1" Color="{x:Static SystemColors.GradientActiveCaptionColor}"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="InactiveTitlebarBackground" Visibility="Hidden" IsHitTestVisible="False">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="{x:Static SystemColors.InactiveCaptionColor}"/>
                                            <GradientStop Offset="1" Color="{x:Static SystemColors.GradientInactiveCaptionColor}"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border-->
                                    <Grid>
                                        <Canvas x:Name="WindowIcon" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="16" Margin="2" IsHitTestVisible="False">
                                            <Canvas.Background>
                                                <ImageBrush ImageSource="{TemplateBinding Icon}" />
                                            </Canvas.Background>
                                        </Canvas>
                                        <Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="26" Margin="23,0,0,0" Foreground="Black" Visibility="{TemplateBinding ShowTitlebarText, Converter={StaticResource BooleanToVisibilityConverter}}" IsHitTestVisible="False"/>
                                        <ContentPresenter Content="{TemplateBinding TitleBarContent}" IsHitTestVisible="False"/>
                                        <StackPanel x:Name="CaptionButtons" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                                            <!--RenderTransformOrigin="1,0">
                                        <StackPanel.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </StackPanel.RenderTransform-->
                                            <!--Width="18" VerticalAlignment="Stretch" -->
                                            <Button x:Name="PART_MinimizeButton" Style="{DynamicResource TitleBarButtonStyle}">
                                                <Rectangle Fill="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="10" Height="1" SnapsToDevicePixels="True"/>
                                            </Button>
                                            <Grid x:Name="MaxRestButtonGrid">
                                                <Button x:Name="PART_MaximizeButton" Style="{DynamicResource TitleBarButtonStyle}">
                                                    <Border BorderBrush="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="10" Height="10" BorderThickness="1"/>
                                                </Button>
                                                <Button x:Name="PART_RestoreButton" Visibility="Hidden" Style="{DynamicResource TitleBarButtonStyle}">
                                                    <Canvas Width="10" Height="10">
                                                        <Border BorderBrush="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="8" Height="8" BorderThickness="1" Canvas.Top="2"/>
                                                        <Border BorderBrush="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="8" Height="8" BorderThickness="0,1,1,0" Canvas.Left="2"/>
                                                        <Rectangle Fill="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="2" Height="1" Canvas.Left="8" Canvas.Top="7"/>
                                                        <Rectangle Fill="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Width="1" Height="2" Canvas.Left="2"/>
                                                    </Canvas>
                                                </Button>
                                            </Grid>
                                            <Button x:Name="PART_CloseButton" Background="#FFE81123" Style="{DynamicResource TitleBarButtonStyle}">
                                                <Path Data="M 0 0 L 10 10 M 0 10 L 10 0" StrokeThickness="1" Stroke="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Fill="Transparent" SnapsToDevicePixels="True"/>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <Border x:Name="DialogFilm" IsHitTestVisible="False" Background="#C0000000" Visibility="Hidden" Margin="0,0,0,-12"/>
                                </Grid>
                                <Border x:Name="Body" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Margin="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </Border>
                                <Grid x:Name="FullWindowContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}">
                                    <ContentPresenter Content="{TemplateBinding FullWindowContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible"/>
                                </Grid>
                                <Grid>
                                    <Grid x:Name="ResizeGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Background="{x:Null}" Margin="0,3" Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                    </Grid>
                                    <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumbStyle}" Visibility="Hidden" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="3" Grid.Row="3"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                            <Setter TargetName="WindowIcon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TitleText" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="7"/>
                            <Setter Property="MaxWidth" Value="{x:Static SystemParameters.PrimaryScreenWidth}"/>
                            <Setter Property="MaxHeight" Value="{x:Static SystemParameters.PrimaryScreenHeight}"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="EdgeColorBorder" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="TitleText" Property="Opacity" Value="0.5"/>
                            <!--Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible"/-->
                            <!--Setter TargetName="TitleText" Property="Foreground" Value="{x:Static SystemColors.InactiveCaptionTextBrush}"/-->
                            <!--Setter TargetName="PART_MinimizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_RestoreButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                            <Setter TargetName="PART_CloseButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}"/-->
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsWindowVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.0">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames-->
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.75" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" EasingFunction="{StaticResource WindowVisibleEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.5">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames-->
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="0.75" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" EasingFunction="{StaticResource WindowHiddenEase}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion Window Styles-->
</ResourceDictionary>